# Атрибут version больше не нужен в современных версиях Docker Compose
services:
  # PHP Service
  app:
    build:
      context: .
      dockerfile: Dockerfile # Убедитесь, что ваш Dockerfile использует образ php-fpm, например php:8.2-fpm
    container_name: wb-api-app
    working_dir: /var/www
    volumes:
      - .:/var/www
    environment:
      # Эти переменные лучше хранить в .env файле
      - "DB_HOST=db"
      - "DB_PORT=3306" # <-- Исправлено
      # Остальные переменные...
    depends_on:
      - db

  scheduler:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: wb-api-scheduler
    working_dir: /var/www
    volumes:
      - .:/var/www
    depends_on:
      - app
    command: php artisan schedule:work
  # Nginx Service
  nginx:
    image: nginx:alpine
    container_name: wb-api-nginx
    ports:
      - "8000:80" # <-- Теперь приложение будет доступно на http://localhost:8000
    volumes:
      - .:/var/www
      - ./docker/nginx/default.conf:/etc/nginx/conf.d/default.conf
    depends_on:
      - app

  # MySQL Service
  db:
    image: mysql:8.0
    container_name: wb-api-db
    restart: unless-stopped
    environment:
      MYSQL_DATABASE: ${DB_DATABASE:-wb_test}
      MYSQL_USER: ${DB_USERNAME:-wb_user}
      MYSQL_PASSWORD: ${DB_PASSWORD:-wb_pass}
      MYSQL_ROOT_PASSWORD: ${MYSQL_ROOT_PASSWORD:-rootpass}
    ports:
      - "${DB_PORT_EXTERNAL:-33060}:3306" # <-- Порт для подключения с вашего ПК
    volumes:
      - db_data:/var/lib/mysql

volumes:
  db_data:
